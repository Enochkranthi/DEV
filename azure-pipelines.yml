# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest


stages:
  - stage: CheckAndCreateInfra
    displayName: Install Azure cli
    jobs:
      - job: CheckAndCreateInfraJob
        displayName: Install command line interfaces
        steps:
        - script: |
              pip install databricks-cli             
          displayName: 'Install Databricks cli'
        - task: AzureCLI@2
          displayName: 'Install Azure ML CLI '
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: 'az extension add -n azure-cli-ml'
        - task: AzureCLI@2
          displayName: 'Update Azure ML CLI '
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: 'az extension update --name azure-cli-ml'
        - task: AzureCLI@2
          displayName: 'Check and create Azure ML workspace'
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              WORKSPACE_EXISTS=$(az ml workspace show --resource-group $(azureml.resourceGroup) --workspace-name $(azureml.workspaceName) --query "id" -o tsv)
              if [ -z "$WORKSPACE_EXISTS" ]; then
                echo "Azure ML workspace does not exist. Creating one..."
                az ml workspace create --resource-group $(azureml.resourceGroup) --name $(azureml.workspaceName) --location $(azureml.location)
              else
                echo "Azure ML workspace already exists."
              fi
            