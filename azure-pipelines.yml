# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest


stages:
  - stage: CheckAndCreateInfra
    displayName: Install Azure cli
    jobs:
      - job: CheckAndCreateInfraJob
        displayName: Install command line interfaces
        steps:
        - script: |
              pip install databricks-cli             
          displayName: 'Install Databricks cli'
        - task: AzureCLI@2
          displayName: 'Install Azure ML CLI '
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: 'az extension add -n azure-cli-ml'
        - task: AzureCLI@2
          displayName: 'Update Azure ML CLI '
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: 'az extension update --name azure-cli-ml'
        - task: AzureCLI@2
          displayName: 'Check and create Azure ML workspace'
          inputs:
            azureSubscription: Azure service connection
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: 
                RESOURCE_GROUP_EXISTS=$(az group exists --name $(azureml.resourceGroup))
                if [ "$RESOURCE_GROUP_EXISTS" == "false" ]; then
                  echo "Resource group does not exist. Creating one..."
                  az group create --name $(azureml.resourceGroup) --location $(azureml.location)
                else
                  echo "Resource group already exists."
                fi
              
            